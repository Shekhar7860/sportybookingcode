{"ast":null,"code":"import { postApi, getApi } from \"../../services/service\";\nimport { SET_USER_DATA } from \"../../redux/actionTypes\";\nexport const loginUser = (url, params) => async dispatch => {\n  const response = await postApi(url, params);\n\n  if (response.status == 200) {\n    dispatch(setUserData(response.data.user));\n  }\n\n  return response;\n};\nexport const signUpUser = (url, params) => async dispatch => {\n  const response = await postApi(url, params);\n  return response;\n};\nexport const getUserProfile = url => async dispatch => {\n  const response = await getApi(url);\n  return response;\n};\nexport function setUserData(data) {\n  return {\n    type: SET_USER_DATA,\n    data\n  };\n}","map":{"version":3,"sources":["/Users/mac15/Desktop/shekhar/sportybookingcode/src/redux/actions/user.js"],"names":["postApi","getApi","SET_USER_DATA","loginUser","url","params","dispatch","response","status","setUserData","data","user","signUpUser","getUserProfile","type"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,MAAlB,QAAgC,wBAAhC;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,OAAO,MAAMC,SAAS,GAAG,CAACC,GAAD,EAAMC,MAAN,KAAiB,MAAOC,QAAP,IAAoB;AAC5D,QAAMC,QAAQ,GAAG,MAAMP,OAAO,CAACI,GAAD,EAAMC,MAAN,CAA9B;;AACA,MAAIE,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AAC1BF,IAAAA,QAAQ,CAACG,WAAW,CAACF,QAAQ,CAACG,IAAT,CAAcC,IAAf,CAAZ,CAAR;AACD;;AACD,SAAOJ,QAAP;AACD,CANM;AAOP,OAAO,MAAMK,UAAU,GAAG,CAACR,GAAD,EAAMC,MAAN,KAAiB,MAAOC,QAAP,IAAoB;AAC7D,QAAMC,QAAQ,GAAG,MAAMP,OAAO,CAACI,GAAD,EAAMC,MAAN,CAA9B;AACA,SAAOE,QAAP;AACD,CAHM;AAIP,OAAO,MAAMM,cAAc,GAAIT,GAAD,IAAS,MAAOE,QAAP,IAAoB;AACzD,QAAMC,QAAQ,GAAG,MAAMN,MAAM,CAACG,GAAD,CAA7B;AACA,SAAOG,QAAP;AACD,CAHM;AAKP,OAAO,SAASE,WAAT,CAAqBC,IAArB,EAA2B;AAChC,SAAO;AACLI,IAAAA,IAAI,EAAEZ,aADD;AAELQ,IAAAA;AAFK,GAAP;AAID","sourcesContent":["import { postApi, getApi } from \"../../services/service\";\nimport { SET_USER_DATA } from \"../../redux/actionTypes\";\nexport const loginUser = (url, params) => async (dispatch) => {\n  const response = await postApi(url, params);\n  if (response.status == 200) {\n    dispatch(setUserData(response.data.user));\n  }\n  return response;\n};\nexport const signUpUser = (url, params) => async (dispatch) => {\n  const response = await postApi(url, params);\n  return response;\n};\nexport const getUserProfile = (url) => async (dispatch) => {\n  const response = await getApi(url);\n  return response;\n};\n\nexport function setUserData(data) {\n  return {\n    type: SET_USER_DATA,\n    data,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}