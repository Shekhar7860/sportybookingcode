{"ast":null,"code":"import axios from \"axios\";\nimport { apiUrl } from \"../../src/constants/constants\";\nexport const postApi = async (url, params) => {\n  let obj = { ...params,\n    role: \"1\"\n  };\n\n  try {\n    let x = await axios.post(apiUrl + url, obj);\n    return x;\n  } catch (error) {\n    return error.response;\n  }\n};\nexport const postApiWithHeaders = async (url, token, params) => {\n  const config = {\n    headers: {\n      authorization: `Bearer ${token}`\n    }\n  };\n\n  try {\n    let x = await axios.post(apiUrl + url, params, config);\n    return x;\n  } catch (error) {\n    return error.response;\n  }\n};\nexport const deleteApi = async (url, token, params) => {\n  const config = {\n    headers: {\n      authorization: `Bearer ${token}`\n    }\n  };\n\n  try {\n    let x = await axios.delete(apiUrl + url, config);\n    return x;\n  } catch (error) {\n    return error.response;\n  }\n};\nexport const getApi = (url, token, params, mode) => {\n  const config = {\n    headers: {\n      authorization: `Bearer ${token}`\n    }\n  };\n\n  if (params != undefined) {\n    if (mode == \"email\") {\n      return axios.get(apiUrl + url + \"?email=\" + params, config).then(response => {\n        return response;\n      });\n    } else {\n      return axios.get(apiUrl + url + \"?phone_number=\" + params, config).then(response => {\n        return response;\n      });\n    }\n  } else {\n    return axios.get(apiUrl + url, config).then(response => {\n      return response;\n    });\n  }\n};\nexport const putApi = async (url, token, params) => {\n  const config = {\n    headers: {\n      authorization: `Bearer ${token}`\n    }\n  };\n\n  try {\n    let x = await axios.put(apiUrl + url, params, config);\n    return x;\n  } catch (error) {\n    return error.response;\n  }\n};\nexport const getFaceBookData = token => {\n  return axios.get(\"https://graph.facebook.com/v2.5/me?fields=email,name,friends&access_token=\" + token).then(response => {\n    return response.data;\n  });\n};","map":{"version":3,"sources":["D:/shekhar/sportybookingcode/src/services/service.js"],"names":["axios","apiUrl","postApi","url","params","obj","role","x","post","error","response","postApiWithHeaders","token","config","headers","authorization","deleteApi","delete","getApi","mode","undefined","get","then","putApi","put","getFaceBookData","data"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { apiUrl } from \"../../src/constants/constants\";\r\nexport const postApi = async (url, params) => {\r\n  let obj = {\r\n    ...params,\r\n    role: \"1\",\r\n  };\r\n  try {\r\n    let x = await axios.post(apiUrl + url, obj);\r\n    return x;\r\n  } catch (error) {\r\n    return error.response;\r\n  }\r\n};\r\n\r\nexport const postApiWithHeaders = async (url, token, params) => {\r\n  const config = {\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  try {\r\n    let x = await axios.post(apiUrl + url, params, config);\r\n    return x;\r\n  } catch (error) {\r\n    return error.response;\r\n  }\r\n};\r\nexport const deleteApi = async (url, token, params) => {\r\n  const config = {\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  try {\r\n    let x = await axios.delete(apiUrl + url, config);\r\n    return x;\r\n  } catch (error) {\r\n    return error.response;\r\n  }\r\n};\r\n\r\nexport const getApi = (url, token, params, mode) => {\r\n  const config = {\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n\r\n  if (params != undefined) {\r\n    if (mode == \"email\") {\r\n      return axios\r\n        .get(apiUrl + url + \"?email=\" + params, config)\r\n        .then((response) => {\r\n          return response;\r\n        });\r\n    } else {\r\n      return axios\r\n        .get(apiUrl + url + \"?phone_number=\" + params, config)\r\n        .then((response) => {\r\n          return response;\r\n        });\r\n    }\r\n  } else {\r\n    return axios.get(apiUrl + url, config).then((response) => {\r\n      return response;\r\n    });\r\n  }\r\n};\r\n\r\nexport const putApi = async (url, token, params) => {\r\n  const config = {\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  try {\r\n    let x = await axios.put(apiUrl + url, params, config);\r\n    return x;\r\n  } catch (error) {\r\n    return error.response;\r\n  }\r\n};\r\n\r\nexport const getFaceBookData = (token) => {\r\n  return axios\r\n    .get(\r\n      \"https://graph.facebook.com/v2.5/me?fields=email,name,friends&access_token=\" +\r\n        token\r\n    )\r\n    .then((response) => {\r\n      return response.data;\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}