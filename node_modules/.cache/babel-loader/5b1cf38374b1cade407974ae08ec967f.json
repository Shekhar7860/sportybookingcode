{"ast":null,"code":"import { postApi, getApi, putApi, deleteApi } from \"../../services/service\";\nimport { SET_USER_DATA, LOG_OUT_USER, SET_USER_NAME } from \"../../redux/actionTypes\";\nexport const loginUser = (url, params) => async dispatch => {\n  const response = await postApi(url, params);\n\n  if (response.status == 200) {\n    dispatch(setUserData(response.data));\n    const first = response.data.user.first_name.charAt(0).toUpperCase();\n    const last = response.data.user.last_name.charAt(0).toUpperCase();\n    dispatch(setUserName(first + last));\n  }\n\n  return response;\n};\nexport const signUpUser = (url, params) => async dispatch => {\n  const response = await postApi(url, params);\n  return response;\n};\nexport const forgotUserPassword = (url, params) => async dispatch => {\n  const response = await postApi(url, params);\n  return response;\n};\nexport const updateUserProfile = (url, token, params) => async dispatch => {\n  const response = await putApi(url, token, params);\n\n  if (response.status == 200) {\n    dispatch(setUserData(response.data));\n  }\n\n  return response;\n};\nexport const getUserProfile = (url, token) => async dispatch => {\n  const response = await getApi(url, token);\n  return response;\n};\nexport const sendUserCode = (url, token, params, mode) => async dispatch => {\n  const response = await getApi(url, token, params, mode);\n  return response;\n};\nexport const verifyUserCode = (url, token, params) => async dispatch => {\n  const response = await putApi(url, token, params);\n  return response;\n};\nexport const updatePassword = (url, token, params) => async dispatch => {\n  const response = await putApi(url, token, params);\n  return response;\n};\nexport function clearData(data) {\n  return {\n    type: LOG_OUT_USER,\n    data\n  };\n}\nexport function setUserData(data) {\n  return {\n    type: SET_USER_DATA,\n    data\n  };\n}\nexport function setUserName(data) {\n  return {\n    type: SET_USER_NAME,\n    data\n  };\n}\nexport const deleteUser = (url, token) => async dispatch => {\n  const response = await deleteApi(url, token);\n  return response;\n};","map":{"version":3,"sources":["/Users/mac15/Desktop/shekhar/sportybookingcode/src/redux/actions/user.js"],"names":["postApi","getApi","putApi","deleteApi","SET_USER_DATA","LOG_OUT_USER","SET_USER_NAME","loginUser","url","params","dispatch","response","status","setUserData","data","first","user","first_name","charAt","toUpperCase","last","last_name","setUserName","signUpUser","forgotUserPassword","updateUserProfile","token","getUserProfile","sendUserCode","mode","verifyUserCode","updatePassword","clearData","type","deleteUser"],"mappings":"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","sourcesContent":["import { postApi, getApi, putApi, deleteApi } from \"../../services/service\";\nimport {\n  SET_USER_DATA,\n  LOG_OUT_USER,\n  SET_USER_NAME,\n} from \"../../redux/actionTypes\";\nexport const loginUser = (url, params) => async (dispatch) => {\n  const response = await postApi(url, params);\n  if (response.status == 200) {\n    dispatch(setUserData(response.data));\n    const first = response.data.user.first_name.charAt(0).toUpperCase();\n    const last = response.data.user.last_name.charAt(0).toUpperCase();\n    dispatch(setUserName(first + last));\n  }\n  return response;\n};\nexport const signUpUser = (url, params) => async (dispatch) => {\n  const response = await postApi(url, params);\n  return response;\n};\nexport const forgotUserPassword = (url, params) => async (dispatch) => {\n  const response = await postApi(url, params);\n  return response;\n};\nexport const updateUserProfile = (url, token, params) => async (dispatch) => {\n  const response = await putApi(url, token, params);\n  if (response.status == 200) {\n    dispatch(setUserData(response.data));\n  }\n  return response;\n};\nexport const getUserProfile = (url, token) => async (dispatch) => {\n  const response = await getApi(url, token);\n  return response;\n};\n\nexport const sendUserCode = (url, token, params, mode) => async (dispatch) => {\n  const response = await getApi(url, token, params, mode);\n  return response;\n};\n\nexport const verifyUserCode = (url, token, params) => async (dispatch) => {\n  const response = await putApi(url, token, params);\n  return response;\n};\n\nexport const updatePassword = (url, token, params) => async (dispatch) => {\n  const response = await putApi(url, token, params);\n  return response;\n};\nexport function clearData(data) {\n  return {\n    type: LOG_OUT_USER,\n    data,\n  };\n}\n\nexport function setUserData(data) {\n  return {\n    type: SET_USER_DATA,\n    data,\n  };\n}\n\nexport function setUserName(data) {\n  return {\n    type: SET_USER_NAME,\n    data,\n  };\n}\n\nexport const deleteUser = (url, token) => async (dispatch) => {\n  const response = await deleteApi(url, token);\n  return response;\n};\n"]},"metadata":{},"sourceType":"module"}