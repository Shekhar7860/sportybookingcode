{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mac15/Desktop/shekhar/sportybookingcode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mac15/Desktop/shekhar/sportybookingcode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{postApi,getApi}from\"../../services/service\";export var loginUser=function loginUser(params){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return postApi(params);case 2:response=_context.sent;return _context.abrupt(\"return\",response);case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var getUser=function getUser(params){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return getApi(params);case 2:response=_context2.sent;return _context2.abrupt(\"return\",response);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/mac15/Desktop/shekhar/sportybookingcode/src/redux/actions/user.js"],"names":["postApi","getApi","loginUser","params","dispatch","response","getUser"],"mappings":"uUAAA,OAASA,OAAT,CAAkBC,MAAlB,KAAgC,wBAAhC,CAEA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,MAAD,iGAAY,iBAAOC,QAAP,qJACZJ,CAAAA,OAAO,CAACG,MAAD,CADK,QAC7BE,QAD6B,+CAE5BA,QAF4B,wDAAZ,gEAAlB,CAIP,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACH,MAAD,kGAAY,kBAAOC,QAAP,0JACVH,CAAAA,MAAM,CAACE,MAAD,CADI,QAC3BE,QAD2B,iDAE1BA,QAF0B,0DAAZ,kEAAhB","sourcesContent":["import { postApi, getApi } from \"../../services/service\";\n\nexport const loginUser = (params) => async (dispatch) => {\n  const response = await postApi(params);\n  return response;\n};\nexport const getUser = (params) => async (dispatch) => {\n  const response = await getApi(params);\n  return response;\n};\n"]},"metadata":{},"sourceType":"module"}